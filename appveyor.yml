#src: https://github.com/ogrisel/python-appveyor-demo

environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"

  matrix:
    # Pre-installed Python versions, which Appveyor may upgrade to
    # a later point release.
    # See: http://www.appveyor.com/docs/installed-software#python

    - PYTHON: "C:\\Python33"
      PYTHON_VERSION: "3.3.x" # currently 3.3.5
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python33-x64"
      PYTHON_VERSION: "3.3.x" # currently 3.3.5
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python34"
      PYTHON_VERSION: "3.4.x" # currently 3.4.4
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python34-x64"
      PYTHON_VERSION: "3.4.x" # currently 3.4.4
      PYTHON_ARCH: "64"

    # Python versions not pre-installed

    - PYTHON: "C:\\Python35"
      PYTHON_VERSION: "3.5.0"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5.0"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python36"
      PYTHON_VERSION: "3.6.0"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6.0"
      PYTHON_ARCH: "64"
init:
  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

install:
  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""

  - ECHO "Installed SDKs:"
  - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""

  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  - ps: if (-not(Test-Path($env:PYTHON))) { & appveyor\install.ps1 }

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "pip install --disable-pip-version-check --user --upgrade pip"

  # Install the build dependencies of the project. If some dependencies contain
  # compiled extensions and are not provided as pre-built wheel packages,
  # pip will build them from source using the MSVC compiler matching the
  # target Python version and architecture
  - "%CMD_IN_ENV% pip install -r app/prerequirements.txt"
  - "%CMD_IN_ENV% pip install -r app/requirements.txt"
  - "%CMD_IN_ENV% pip install -r app/winrequirements.txt"
  - "%CMD_IN_ENV% pip install -r app/testrequirements.txt"
  - "%CMD_IN_ENV% pip install codeclimate-test-reporter"

  - ps: appveyor/create_deploy.ps1

build: off

artifacts:
  - path: app/opserv-win-build.zip
    name: OpServBuild

deploy:
  description: 'Release description'
  provider: GitHub
  auth_token:
    secure: HxCB8m6bjdYCkKlCeYHCPpD8C5dJX/03Ot84FcuNkrL/uCFw0/TIslHJXBnyMhmE # your encrypted token from GitHub
  artifact: app\opserv-win-build.zip          # upload all NuGet packages to release assets
  draft: false
  prerelease: true
  on:              
    appveyor_repo_tag: true        # deploy on tag push only

test_script:
  # Run the project tests
  - "%CMD_IN_ENV% pytest --cov=app"

after_test:
  - "%CMD_IN_ENV% codeclimate-test-reporter --token %CCTOKEN%"